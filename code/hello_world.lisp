(defun hello-world ()
  (format t "hello , world"))

( * 2 2)

(defun square (x)
  (* x x))


 (defun triple (x)
	  (* x x x))
(list :a 1 :b 2 :c 3)
(getf (list :a 1 :b 2 :c 3) :a)
(getf (list :a 1 :b 2 :c 3) :b)
(defun make-cd (title artist rating ripped)
	   (list :title title :artist artist :rating rating :ripped ripped))
(make-cd "culture" "migos" 10 t)
(defvar *db* nil)
(defun add-record (cd) (push cd *db*))
(add-record (make-cd "culture" "migos" 10 t))
(add-record (make-cd "dank" "meh" 12 t))
(add-record (make-cd "hello" "world" 9 t))
(defun dumb-db ()
	   (dolist (cd *db*)
	     (format t "~{~a:~10t~a~%~}~%" cd)))
(atom *db*)
(symbolp *db*)
(atom 'a)
(atom 'b)
(atom 'c)
(atom 'zuriel)
(atom '(zuriel))
(atom '(zuriel victory laptop chair))
(consp '(zuriel victory laptop chair))
(consp *db*)
(defvar x 2)
(defvar x 3)
(defparameter x 2)
(defparameter x 3)
(consp x)
(defparameter objects-around-me '(phone mirror mattress pen))
(atom objects-around-me)
(defvar objects-around-me '(phone mirror mattress pen))
(consp objects-around-me)
*db*
(atom x)
'(+ 1 2)
(defparameter x (+ 3 5))
